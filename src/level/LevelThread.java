package level;

import undertale.*;

public class LevelThread implements Runnable{
	Step step;
	BoardMovePaturnThread boardMovePaturnThread;
	Thread thread;
	
	public LevelThread(Step step, BoardMovePaturnThread boardMovePaturnThread) {
		this.step = step;
		this.boardMovePaturnThread = boardMovePaturnThread;
	}
	
	public Thread getThread() {
		return thread;
	}

	public void setThread(Thread thread) {
		this.thread = thread;
	}

	@Override
	public void run() {
		try {
			switch (step.getLevel() - 1) {
			case 1:
				Thread.sleep(1000);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(600);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(600);
				step.makeSpider(1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(1, 2, 8);
				Thread.sleep(600);
				step.makeSpider(1, 3, 8);
				Thread.sleep(300);
				step.makeSpider(1, 1, 8);
				Thread.sleep(1500);
				step.battleClose();
				break;
			case 2:
				Thread.sleep(1000);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(600);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(1, 1, 8);
				Thread.sleep(600);
				step.makeSpider(1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(1, 3, 8);
				Thread.sleep(600);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(600);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(1500);
				step.battleClose();
				break;
			case 3:
				Thread.sleep(1000);
				step.makeSpider(-1, 2, 8);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(600);
				step.makeSpider(-1, 1, 8);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(300);
				step.makeSpider(1, 2, 8);
				Thread.sleep(600);
				step.makeSpider(1, 1, 8);
				step.makeSpider(1, 3, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(1, 1, 8);
				step.makeSpider(1, 3, 8);
				Thread.sleep(1500);
				step.battleClose();
				break;
				
			case 4:
				Thread.sleep(1000);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(300);
				step.makeSpider(1, 1, 8);
				step.makeSpider(1, 2, 8);
				Thread.sleep(500);
				step.makeSpider(1, 2, 8);
				step.makeSpider(1, 3, 8);
				Thread.sleep(500);
				step.makeSpider(1, 1, 8);
				step.makeSpider(1, 3, 8);
				Thread.sleep(800);
				step.makeDonut(1, 1, 6);
				Thread.sleep(800);
				step.makeDonut(1, 3, 6);
				Thread.sleep(800);
				step.makeDonut(1, 1, 6);
				Thread.sleep(1500);
				step.battleClose();
				break;
			case 5:
				boardMovePaturnThread.reset();
				thread = new Thread(boardMovePaturnThread);
				thread.start();
				Thread.sleep(1000);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(7500);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 5);
				step.makeSpider2(1, 5);
				Thread.sleep(1000);
				step.makeSpider2(1, 5);
				step.makeSpider2(1, 5);
				step.makeSpider2(1, 5);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 5);
				Thread.sleep(1000);
				step.makeSpider2(1, 5);
				step.makeSpider2(1, 5);
				step.makeSpider2(1, 8);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(2500);
				Game.game.spiders2.clear();
				boardMovePaturnThread.boardReset();
				Thread.sleep(1200);
				boardMovePaturnThread.reset();
				step.battleClose();
				break;
			case 6:
				Thread.sleep(1000);
				step.makeSpider(-1, 1, 8);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(800);
				step.makeDonut(-1, 2, 6);
				step.makeDonut(-1, 1, 6);
				Thread.sleep(300);
				step.makeSpider(1, 1, 10);
				Thread.sleep(800);
				step.makeDonut(1, 2, 6);
				step.makeDonut(1, 1, 6);
				Thread.sleep(800);
				step.makeSpider(-1, 2, 8);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(800);
				step.makeDonut(-1, 2, 6);
				step.makeDonut(-1, 1, 6);
				step.makeSpider(1, 1, 10);
				step.makeSpider(1, 3, 10);
				Thread.sleep(1500);
				step.battleClose();
				break;
			case 7:
				Thread.sleep(1000);
				step.makeSpider(-1, 1, 12);
				Thread.sleep(200);
				step.makeSpider(1, 1, 12);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 12);
				Thread.sleep(300);
				step.makeSpider(1, 2, 12);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 12);
				Thread.sleep(400);
				step.makeSpider(1, 3, 12);
				Thread.sleep(300);
				step.makeSpider(1, 1, 12);
				Thread.sleep(200);
				step.makeSpider(-1, 1, 12);
				Thread.sleep(300);
				step.makeSpider(1, 3, 12);
				Thread.sleep(200);
				step.makeSpider(-1, 2, 12);
				Thread.sleep(200);
				step.makeSpider(1, 3, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 1, 12);
				step.makeSpider(1, 3, 12);
				Thread.sleep(200);
				step.makeSpider(1, 1, 12);
				step.makeSpider(-1, 3, 12);
				Thread.sleep(600);
				step.makeSpider(1, 2, 20);
				Thread.sleep(1500);
				step.battleClose();
				break;
			case 8:
				Thread.sleep(1000);
				step.makeDonut(-1, 1, 6);
				step.makeDonut(-1, 3, 6);
				step.makeDonut(1, 1, 6);
				step.makeDonut(1, 3, 6);
				Thread.sleep(400);
				step.makeSpider(-1, 1, 12);
				Thread.sleep(200);
				step.makeSpider(1, 1, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 3, 12);
				Thread.sleep(200);
				step.makeSpider(1, 3, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 2, 12);
				Thread.sleep(200);
				step.makeSpider(1, 2, 12);
				Thread.sleep(500);
				step.makeBoomerang(1, 2, 10);
				
				Thread.sleep(3500);
				step.battleClose();
				break;
			case 9:
				Thread.sleep(1000);
				step.makeBoomerang(1, 1, 10);
				step.makeBoomerang(1, 3, 10);
				Thread.sleep(800);
				step.makeBoomerang(1, 2, 10);
				Thread.sleep(800);
				step.makeBoomerang(-1, 1, 10);
				step.makeBoomerang(-1, 3, 10);
				Thread.sleep(800);
				step.makeBoomerang(-1, 2, 10);
				Thread.sleep(5000);
				step.battleClose();
				break;
			case 10:
				boardMovePaturnThread.reset();
				thread = new Thread(boardMovePaturnThread);
				thread.start();
				Thread.sleep(1000);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 1, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(7500);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 6);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 8);
				step.makeSpider2(1, 8);
				step.makeSpider2(1, 8);
				Thread.sleep(1000);
				step.makeSpider2(1, 8);
				step.makeSpider2(1, 8);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 15);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 5);
				Thread.sleep(1000);
				step.makeSpider2(1, 8);
				step.makeSpider2(1, 8);
				step.makeSpider2(1, 5);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 8);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 3);
				Thread.sleep(2500);
				Game.game.spiders2.clear();
				boardMovePaturnThread.boardReset();
				Thread.sleep(1200);
				boardMovePaturnThread.reset();
				step.battleClose();
				break;
			case 11:
				Thread.sleep(1000);
				step.makeSpider(-1, 3, 12);
				Thread.sleep(300);
				step.makeSpider(1, 3, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 1, 12);
				Thread.sleep(400);
				step.makeSpider(1, 3, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 2, 12);
				Thread.sleep(400);
				step.makeSpider(1, 3, 12);
				Thread.sleep(400);
				step.makeSpider(1, 2, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 1, 12);
				Thread.sleep(200);
				step.makeSpider(1, 1, 12);
				Thread.sleep(400);
				step.makeSpider(-1, 2, 12);
				Thread.sleep(400);
				step.makeSpider(1, 1, 12);
				Thread.sleep(200);
				step.makeSpider(1, 2, 12);
				Thread.sleep(200);
				step.makeSpider(-1, 2, 12);
				Thread.sleep(200);
				step.makeSpider(1, 1, 12);
				step.makeSpider(-1, 1, 12);
				Thread.sleep(200);
				step.makeSpider(-1, 3, 12);
				step.makeSpider(1, 3, 12);
				Thread.sleep(2000);
				step.battleClose();
				break;
			case 12:
				Thread.sleep(1000);
				step.makeDonut(1, 2, 6);
				step.makeDonut(1, 3, 6);
				Thread.sleep(1000);
				step.makeDonut(-1, 2, 6);
				step.makeDonut(-1, 3, 6);
				Thread.sleep(1000);
				step.makeDonut(1, 1, 6);
				step.makeDonut(1, 2, 6);
				Thread.sleep(1000);
				step.makeDonut(-1, 2, 6);
				step.makeDonut(-1, 3, 6);
				Thread.sleep(1000);
				step.makeDonut(1, 1, 6);
				step.makeDonut(1, 3, 6);
				Thread.sleep(1000);
				step.makeDonut(-1, 1, 6);
				step.makeDonut(-1, 3, 6);
				Thread.sleep(2000);
				step.battleClose();
				break;
			case 13:
				Thread.sleep(1000);
				step.makeBoomerang(-1, 1, 10);
				step.makeBoomerang(-1, 2, 10);
				Thread.sleep(1200);
				step.makeBoomerang(-1, 3, 10);
				step.makeBoomerang(-1, 2, 10);
				Thread.sleep(1600);
				step.makeBoomerang(1, 2, 10);
				step.makeBoomerang(1, 3, 10);
				Thread.sleep(1700);
				step.makeBoomerang(1, 1, 10);
				step.makeBoomerang(1, 2, 10);
				Thread.sleep(1700);
				step.makeBoomerang(-1, 1, 10);
				step.makeBoomerang(-1, 2, 10);
				Thread.sleep(1700);
				step.makeBoomerang(-1, 2, 10);
				step.makeBoomerang(-1, 3, 10);
				Thread.sleep(1200);
				step.makeBoomerang(-1, 1, 10);
				Thread.sleep(2400);
				step.battleClose();
				break;
			case 14:
				Thread.sleep(1000);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(800);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 1, 5);
				step.makeSpider(-1, 3, 5);
				Thread.sleep(1500);
				step.battleClose();
				break;
			case 15: 
				Thread.sleep(1000);
				step.makeDonut(1, 1, 6);
				step.makeDonut(1, 2, 6);
				step.makeDonut(-1, 3, 6);
				step.makeDonut(-1, 2, 6);
				Thread.sleep(2000);
				step.makeSpider(1, 1, 8);
				step.makeSpider(-1, 1, 8);
				Thread.sleep(200);
				step.makeSpider(1, 3, 8);
				step.makeSpider(-1, 3, 8);
				Thread.sleep(800);
				step.makeBoomerang(-1, 1, 12);
				step.makeBoomerang(-1, 3, 12);
				step.makeBoomerang(1, 1, 12);
				step.makeBoomerang(1, 3, 12);
				Thread.sleep(1200);
				step.makeSpider(1, 2, 8);
				step.makeSpider(-1, 2, 8);
				Thread.sleep(2500);
				step.battleClose();
				break;
			case 16:
				boardMovePaturnThread.reset();
				thread = new Thread(boardMovePaturnThread);
				thread.start();
				Thread.sleep(1000);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 2, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 3, 10);
				Thread.sleep(300);
				step.makeSpider(-1, 1, 10);
				step.makeSpider(-1, 2, 10);
				Thread.sleep(7500);
				step.makeSpider2(1, 1);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				Thread.sleep(1000);
				step.makeSpider2(1, 5);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				Thread.sleep(1000);
				step.makeSpider2(-1, 5);
				step.makeSpider2(1, 3);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(-1, 2);
				step.makeSpider2(-1, 1);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				step.makeSpider2(-1, 1);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 6);
				step.makeSpider2(-1, 2);
				Thread.sleep(1000);
				step.makeSpider2(1, 3);
				step.makeSpider2(1, 2);
				step.makeSpider2(1, 1);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				step.makeSpider2(-1, 2);
				Thread.sleep(1000);
				step.makeSpider2(-1, 7);
				step.makeSpider2(1, 5);
				step.makeSpider2(-1, 2);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				step.makeSpider2(-1, 2);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 2);
				step.makeSpider2(-1, 2);
				Thread.sleep(1000);
				step.makeSpider2(-1, 3);
				step.makeSpider2(1, 1);
				step.makeSpider2(-1, 1);
				Thread.sleep(1000);
				step.makeSpider2(-1, 5);
				step.makeSpider2(1, 2);
				step.makeSpider2(-1, 1);
				Thread.sleep(1000);
				step.makeSpider2(-1, 7);
				step.makeSpider2(1, 5);
				step.makeSpider2(-1, 6);
				Thread.sleep(2500);
				Game.game.spiders2.clear();
				boardMovePaturnThread.boardReset();
				Thread.sleep(1200);
				boardMovePaturnThread.reset();
				step.battleClose();
				break;
			case 17:
				step.ending = true;
				Game.game.music.close();
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}
